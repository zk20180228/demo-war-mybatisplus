server.port=8080
#MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/test-jar?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driverClassName可以不要，框架会根据url判断的,但是整合druid时就必须给出
spring.datasource.driverClassName=com.mysql.jdbc.Driver

#H2
#spring.datasource.url=jdbc:h2:file:D:/h2/test
#内存模型
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.username=sa
#spring.datasource.password=honry

#redis及连接池配置
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.password=zk
# spring.redis.database=0
# spring.redis.pool.max-active=8
# spring.redis.pool.max-idle=8
# spring.redis.pool.max-wait=-1
# spring.redis.pool.min-idle=0
# spring.redis.timeout=0

# MONGODB (MongoProperties)
#spring.data.mongodb.uri=mongodb://admin:admin@127.0.0.1:27017/test
#spring.data.mongodb.port=27017
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.database=test
# spring.data.mongodb.field-naming-strategy=
# spring.data.mongodb.grid-fs-database=
#spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.password=admin
# spring.data.mongodb.repositories.enabled=true
#spring.data.mongodb.username=admin

#Cache
spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:config/ehcache.xml

# RABBIT (RabbitProperties)
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.password=admin
#spring.rabbitmq.username=admin
#spring.rabbitmq.virtual-host=/

# spring session使用存储类型
#spring.session.store-type=redis
#spring session刷新模式：默认on-save
#spring.session.redis.flush-mode=on-save
#区分不同集群（系统）的namespace,防止不同系统之间的干扰
#spring.session.redis.namespace=springboot-02
# session超时时间，单位秒
#server.session.timeout=300
#自定义session的标记名
#spring.session.cookieName=jsessionid02

#mybatis mapper配置文件和别名配置
mybatis.mapper-locations=classpath:mybatis/*.xml
#实体前缀配置
#mybatis.type-aliases-package=

#mybatis-plus
#mapper文件的位置 和mybatis.mapper-locations不冲突
mybatis-plus.mapper-locations=classpath:mybatis/*.xml
#主键策略 AUTO->`0`("数据库ID自增") INPUT->`1`(用户输入ID") ID_WORKER(默认)->`2`("全局唯一ID") UUID->`3`("全局唯一ID")
mybatis-plus.global-config.db-config.id-type=auto
#字段策略 0:"忽略判断"-->ignored,1:"非 NULL 判断"-->not_null,2:"非空判断"-->not_empty,这个类似于更新时的动态sql,更新或者插入式忽略空值字段,默认值是not_null
mybatis-plus.global-config.db-config.field-strategy=not_null
#驼峰下划线转换在MP中，我们建议数据库表名和表字段名采用驼峰命名方式。
#这么做的原因是为了避免在对应实体类时产生的性能损耗，这样字段不用做映射就能直接和实体类对应。当然如果项目里不用考虑这点性能损耗，那么你采用下滑线也是没问题的，只需要在生成代码时配置dbColumnUnderline属性就可以。
mybatis-plus.global-config.db-config.column-underline=true
#数据库大写下划线转换
#mybatis-plus.global-config.db-config.capital-mode=true
#刷新mapper 调试神器

#逻辑删除配置 是否删除 1 是 0 否
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0
#数据库类型配置，可选参数（默认mysql）
#MYSQL->`mysql`
#ORACLE->`oracle`
#DB2->`db2`
#H2->`h2`
#HSQL->`hsql`
#SQLITE->`sqlite`
#POSTGRE->`postgresql`
#SQLSERVER2005->`sqlserver2005`
#SQLSERVER->`sqlserver
mybatis-plus.global-config.db-config.db-type=mysql
#实体扫描 配置包别名，支持通配符 * 或者 ; 分割
#mybatis-plus.type-aliases-package=
#枚举属性配置扫描，支持通配符 * 或者 ; 分割
#mybatis-plus.type-enums-package=
mybatis-plus.global-config.refresh=true
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false
#配置JdbcTypeForNull, oracle数据库必须配置
#mybatis-plus.configuration.jdbc-type-for-null=
# Sequence序列接口实现类配置，具体使用查阅官方文档（ps:oracle中使用）
#mybatis-plus.global-config.db-config.key-generator=com.baomidou.mybatisplus.extension.incrementer.OracleKeyGenerator
#多数据源,读写分离，查阅官方文档


#默认的连接池
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
#druid配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource



#自定义配置
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

